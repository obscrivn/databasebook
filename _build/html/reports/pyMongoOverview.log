Traceback (most recent call last):
  File "/Users/olgascrivner/anaconda3/lib/python3.7/site-packages/jupyter_cache/executors/utils.py", line 56, in single_nb_execution
    record_timing=False,
  File "/Users/olgascrivner/anaconda3/lib/python3.7/site-packages/nbclient/client.py", line 1082, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/olgascrivner/anaconda3/lib/python3.7/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/olgascrivner/anaconda3/lib/python3.7/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/Users/olgascrivner/anaconda3/lib/python3.7/asyncio/base_events.py", line 573, in run_until_complete
    return future.result()
  File "/Users/olgascrivner/anaconda3/lib/python3.7/site-packages/nbclient/client.py", line 536, in async_execute
    cell, index, execution_count=self.code_cells_executed + 1
  File "/Users/olgascrivner/anaconda3/lib/python3.7/site-packages/nbclient/client.py", line 827, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/Users/olgascrivner/anaconda3/lib/python3.7/site-packages/nbclient/client.py", line 735, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply['content'])
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
for r in db['coronavirus'].find().limit(1):
    print(r)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mOperationFailure[0m                          Traceback (most recent call last)
[0;32m<ipython-input-36-0cf5b8ddbe68>[0m in [0;36m<module>[0;34m[0m
[0;32m----> 1[0;31m [0;32mfor[0m [0mr[0m [0;32min[0m [0mdb[0m[0;34m[[0m[0;34m'coronavirus'[0m[0;34m][0m[0;34m.[0m[0mfind[0m[0;34m([0m[0;34m)[0m[0;34m.[0m[0mlimit[0m[0;34m([0m[0;36m1[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      2[0m     [0mprint[0m[0;34m([0m[0mr[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/anaconda3/lib/python3.7/site-packages/pymongo/cursor.py[0m in [0;36mnext[0;34m(self)[0m
[1;32m   1205[0m         [0;32mif[0m [0mself[0m[0;34m.[0m[0m__empty[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1206[0m             [0;32mraise[0m [0mStopIteration[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1207[0;31m         [0;32mif[0m [0mlen[0m[0;34m([0m[0mself[0m[0;34m.[0m[0m__data[0m[0;34m)[0m [0;32mor[0m [0mself[0m[0;34m.[0m[0m_refresh[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1208[0m             [0;32mif[0m [0mself[0m[0;34m.[0m[0m__manipulate[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1209[0m                 [0m_db[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m__collection[0m[0;34m.[0m[0mdatabase[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/anaconda3/lib/python3.7/site-packages/pymongo/cursor.py[0m in [0;36m_refresh[0;34m(self)[0m
[1;32m   1122[0m                                   [0mself[0m[0;34m.[0m[0m__collection[0m[0;34m.[0m[0mdatabase[0m[0;34m.[0m[0mclient[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1123[0m                                   self.__allow_disk_use)
[0;32m-> 1124[0;31m             [0mself[0m[0;34m.[0m[0m__send_message[0m[0;34m([0m[0mq[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1125[0m         [0;32melif[0m [0mself[0m[0;34m.[0m[0m__id[0m[0;34m:[0m  [0;31m# Get More[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1126[0m             [0;32mif[0m [0mself[0m[0;34m.[0m[0m__limit[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/anaconda3/lib/python3.7/site-packages/pymongo/cursor.py[0m in [0;36m__send_message[0;34m(self, operation)[0m
[1;32m    999[0m             response = client._run_operation_with_response(
[1;32m   1000[0m                 [0moperation[0m[0;34m,[0m [0mself[0m[0;34m.[0m[0m_unpack_response[0m[0;34m,[0m [0mexhaust[0m[0;34m=[0m[0mself[0m[0;34m.[0m[0m__exhaust[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1001[0;31m                 address=self.__address)
[0m[1;32m   1002[0m         [0;32mexcept[0m [0mOperationFailure[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1003[0m             [0mself[0m[0;34m.[0m[0m__killed[0m [0;34m=[0m [0;32mTrue[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/anaconda3/lib/python3.7/site-packages/pymongo/mongo_client.py[0m in [0;36m_run_operation_with_response[0;34m(self, operation, unpack_res, exhaust, address)[0m
[1;32m   1370[0m             [0maddress[0m[0;34m=[0m[0maddress[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1371[0m             [0mretryable[0m[0;34m=[0m[0misinstance[0m[0;34m([0m[0moperation[0m[0;34m,[0m [0mmessage[0m[0;34m.[0m[0m_Query[0m[0;34m)[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1372[0;31m             exhaust=exhaust)
[0m[1;32m   1373[0m [0;34m[0m[0m
[1;32m   1374[0m     [0;32mdef[0m [0m_retry_with_session[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mretryable[0m[0;34m,[0m [0mfunc[0m[0;34m,[0m [0msession[0m[0;34m,[0m [0mbulk[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/anaconda3/lib/python3.7/site-packages/pymongo/mongo_client.py[0m in [0;36m_retryable_read[0;34m(self, func, read_pref, session, address, retryable, exhaust)[0m
[1;32m   1463[0m                     [0mretryable[0m [0;34m=[0m [0;32mFalse[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1464[0m                 with self._slaveok_for_server(read_pref, server, session,
[0;32m-> 1465[0;31m                                               [0mexhaust[0m[0;34m=[0m[0mexhaust[0m[0;34m)[0m [0;32mas[0m [0;34m([0m[0msock_info[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1466[0m                                                                    slave_ok):
[1;32m   1467[0m                     [0;32mif[0m [0mretrying[0m [0;32mand[0m [0;32mnot[0m [0mretryable[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/anaconda3/lib/python3.7/contextlib.py[0m in [0;36m__enter__[0;34m(self)[0m
[1;32m    110[0m         [0;32mdel[0m [0mself[0m[0;34m.[0m[0margs[0m[0;34m,[0m [0mself[0m[0;34m.[0m[0mkwds[0m[0;34m,[0m [0mself[0m[0;34m.[0m[0mfunc[0m[0;34m[0m[0;34m[0m[0m
[1;32m    111[0m         [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 112[0;31m             [0;32mreturn[0m [0mnext[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mgen[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    113[0m         [0;32mexcept[0m [0mStopIteration[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    114[0m             [0;32mraise[0m [0mRuntimeError[0m[0;34m([0m[0;34m"generator didn't yield"[0m[0;34m)[0m [0;32mfrom[0m [0;32mNone[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/anaconda3/lib/python3.7/site-packages/pymongo/mongo_client.py[0m in [0;36m_slaveok_for_server[0;34m(self, read_preference, server, session, exhaust)[0m
[1;32m   1307[0m         [0msingle[0m [0;34m=[0m [0mtopology[0m[0;34m.[0m[0mdescription[0m[0;34m.[0m[0mtopology_type[0m [0;34m==[0m [0mTOPOLOGY_TYPE[0m[0;34m.[0m[0mSingle[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1308[0m [0;34m[0m[0m
[0;32m-> 1309[0;31m         [0;32mwith[0m [0mself[0m[0;34m.[0m[0m_get_socket[0m[0;34m([0m[0mserver[0m[0;34m,[0m [0msession[0m[0;34m,[0m [0mexhaust[0m[0;34m=[0m[0mexhaust[0m[0;34m)[0m [0;32mas[0m [0msock_info[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1310[0m             slave_ok = (single and not sock_info.is_mongos) or (
[1;32m   1311[0m                 read_preference != ReadPreference.PRIMARY)

[0;32m~/anaconda3/lib/python3.7/contextlib.py[0m in [0;36m__enter__[0;34m(self)[0m
[1;32m    110[0m         [0;32mdel[0m [0mself[0m[0;34m.[0m[0margs[0m[0;34m,[0m [0mself[0m[0;34m.[0m[0mkwds[0m[0;34m,[0m [0mself[0m[0;34m.[0m[0mfunc[0m[0;34m[0m[0;34m[0m[0m
[1;32m    111[0m         [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 112[0;31m             [0;32mreturn[0m [0mnext[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mgen[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    113[0m         [0;32mexcept[0m [0mStopIteration[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    114[0m             [0;32mraise[0m [0mRuntimeError[0m[0;34m([0m[0;34m"generator didn't yield"[0m[0;34m)[0m [0;32mfrom[0m [0;32mNone[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/anaconda3/lib/python3.7/site-packages/pymongo/mongo_client.py[0m in [0;36m_get_socket[0;34m(self, server, session, exhaust)[0m
[1;32m   1245[0m         [0;32mwith[0m [0m_MongoClientErrorHandler[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mserver[0m[0;34m,[0m [0msession[0m[0;34m)[0m [0;32mas[0m [0merr_handler[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1246[0m             with server.get_socket(
[0;32m-> 1247[0;31m                     self.__all_credentials, checkout=exhaust) as sock_info:
[0m[1;32m   1248[0m                 [0merr_handler[0m[0;34m.[0m[0mcontribute_socket[0m[0;34m([0m[0msock_info[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1249[0m                 if (self._encrypter and

[0;32m~/anaconda3/lib/python3.7/contextlib.py[0m in [0;36m__enter__[0;34m(self)[0m
[1;32m    110[0m         [0;32mdel[0m [0mself[0m[0;34m.[0m[0margs[0m[0;34m,[0m [0mself[0m[0;34m.[0m[0mkwds[0m[0;34m,[0m [0mself[0m[0;34m.[0m[0mfunc[0m[0;34m[0m[0;34m[0m[0m
[1;32m    111[0m         [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 112[0;31m             [0;32mreturn[0m [0mnext[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mgen[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    113[0m         [0;32mexcept[0m [0mStopIteration[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    114[0m             [0;32mraise[0m [0mRuntimeError[0m[0;34m([0m[0;34m"generator didn't yield"[0m[0;34m)[0m [0;32mfrom[0m [0;32mNone[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/anaconda3/lib/python3.7/site-packages/pymongo/pool.py[0m in [0;36mget_socket[0;34m(self, all_credentials, checkout)[0m
[1;32m   1223[0m             [0mlisteners[0m[0;34m.[0m[0mpublish_connection_check_out_started[0m[0;34m([0m[0mself[0m[0;34m.[0m[0maddress[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1224[0m [0;34m[0m[0m
[0;32m-> 1225[0;31m         [0msock_info[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_get_socket[0m[0;34m([0m[0mall_credentials[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1226[0m [0;34m[0m[0m
[1;32m   1227[0m         [0;32mif[0m [0mself[0m[0;34m.[0m[0menabled_for_cmap[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/anaconda3/lib/python3.7/site-packages/pymongo/pool.py[0m in [0;36m_get_socket[0;34m(self, all_credentials)[0m
[1;32m   1277[0m                     [0;32mif[0m [0mself[0m[0;34m.[0m[0m_perished[0m[0;34m([0m[0msock_info[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1278[0m                         [0msock_info[0m [0;34m=[0m [0;32mNone[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1279[0;31m             [0msock_info[0m[0;34m.[0m[0mcheck_auth[0m[0;34m([0m[0mall_credentials[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1280[0m         [0;32mexcept[0m [0mException[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1281[0m             [0;32mif[0m [0msock_info[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/anaconda3/lib/python3.7/site-packages/pymongo/pool.py[0m in [0;36mcheck_auth[0;34m(self, all_credentials)[0m
[1;32m    791[0m [0;34m[0m[0m
[1;32m    792[0m             [0;32mfor[0m [0mcredentials[0m [0;32min[0m [0mcached[0m [0;34m-[0m [0mauthset[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 793[0;31m                 [0mself[0m[0;34m.[0m[0mauthenticate[0m[0;34m([0m[0mcredentials[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    794[0m [0;34m[0m[0m
[1;32m    795[0m         [0;31m# CMAP spec says to publish the ready event only after authenticating[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/anaconda3/lib/python3.7/site-packages/pymongo/pool.py[0m in [0;36mauthenticate[0;34m(self, credentials)[0m
[1;32m    808[0m           [0;34m-[0m[0;31m [0m[0;31m`[0m[0mcredentials[0m[0;31m`[0m[0;34m:[0m [0mA[0m [0mMongoCredential[0m[0;34m.[0m[0;34m[0m[0;34m[0m[0m
[1;32m    809[0m         """
[0;32m--> 810[0;31m         [0mauth[0m[0;34m.[0m[0mauthenticate[0m[0;34m([0m[0mcredentials[0m[0;34m,[0m [0mself[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    811[0m         [0mself[0m[0;34m.[0m[0mauthset[0m[0;34m.[0m[0madd[0m[0;34m([0m[0mcredentials[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    812[0m         [0;31m# negotiated_mechanisms are no longer needed.[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/anaconda3/lib/python3.7/site-packages/pymongo/auth.py[0m in [0;36mauthenticate[0;34m(credentials, sock_info)[0m
[1;32m    671[0m     [0mmechanism[0m [0;34m=[0m [0mcredentials[0m[0;34m.[0m[0mmechanism[0m[0;34m[0m[0;34m[0m[0m
[1;32m    672[0m     [0mauth_func[0m [0;34m=[0m [0m_AUTH_MAP[0m[0;34m.[0m[0mget[0m[0;34m([0m[0mmechanism[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 673[0;31m     [0mauth_func[0m[0;34m([0m[0mcredentials[0m[0;34m,[0m [0msock_info[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    674[0m [0;34m[0m[0m
[1;32m    675[0m [0;34m[0m[0m

[0;32m~/anaconda3/lib/python3.7/site-packages/pymongo/auth.py[0m in [0;36m_authenticate_default[0;34m(credentials, sock_info)[0m
[1;32m    589[0m             [0;32mreturn[0m [0m_authenticate_scram[0m[0;34m([0m[0mcredentials[0m[0;34m,[0m [0msock_info[0m[0;34m,[0m [0;34m'SCRAM-SHA-256'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    590[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 591[0;31m             [0;32mreturn[0m [0m_authenticate_scram[0m[0;34m([0m[0mcredentials[0m[0;34m,[0m [0msock_info[0m[0;34m,[0m [0;34m'SCRAM-SHA-1'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    592[0m     [0;32melif[0m [0msock_info[0m[0;34m.[0m[0mmax_wire_version[0m [0;34m>=[0m [0;36m3[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    593[0m         [0;32mreturn[0m [0m_authenticate_scram[0m[0;34m([0m[0mcredentials[0m[0;34m,[0m [0msock_info[0m[0;34m,[0m [0;34m'SCRAM-SHA-1'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/anaconda3/lib/python3.7/site-packages/pymongo/auth.py[0m in [0;36m_authenticate_scram[0;34m(credentials, sock_info, mechanism)[0m
[1;32m    293[0m         nonce, first_bare, cmd = _authenticate_scram_start(
[1;32m    294[0m             credentials, mechanism)
[0;32m--> 295[0;31m         [0mres[0m [0;34m=[0m [0msock_info[0m[0;34m.[0m[0mcommand[0m[0;34m([0m[0msource[0m[0;34m,[0m [0mcmd[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    296[0m [0;34m[0m[0m
[1;32m    297[0m     [0mserver_first[0m [0;34m=[0m [0mres[0m[0;34m[[0m[0;34m'payload'[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m

[0;32m~/anaconda3/lib/python3.7/site-packages/pymongo/pool.py[0m in [0;36mcommand[0;34m(self, dbname, spec, slave_ok, read_preference, codec_options, check, allowable_errors, check_keys, read_concern, write_concern, parse_write_concern_error, collation, session, client, retryable_write, publish_events, user_fields, exhaust_allowed)[0m
[1;32m    692[0m                            [0munacknowledged[0m[0;34m=[0m[0munacknowledged[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    693[0m                            [0muser_fields[0m[0;34m=[0m[0muser_fields[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 694[0;31m                            exhaust_allowed=exhaust_allowed)
[0m[1;32m    695[0m         [0;32mexcept[0m [0mOperationFailure[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    696[0m             [0;32mraise[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/anaconda3/lib/python3.7/site-packages/pymongo/network.py[0m in [0;36mcommand[0;34m(sock_info, dbname, spec, slave_ok, is_mongos, read_preference, codec_options, session, client, check, allowable_errors, address, check_keys, listeners, max_bson_size, read_concern, parse_write_concern_error, collation, compression_ctx, use_op_msg, unacknowledged, user_fields, exhaust_allowed)[0m
[1;32m    160[0m                     [0mresponse_doc[0m[0;34m,[0m [0msock_info[0m[0;34m.[0m[0mmax_wire_version[0m[0;34m,[0m [0;32mNone[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    161[0m                     [0mallowable_errors[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 162[0;31m                     parse_write_concern_error=parse_write_concern_error)
[0m[1;32m    163[0m     [0;32mexcept[0m [0mException[0m [0;32mas[0m [0mexc[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    164[0m         [0;32mif[0m [0mpublish[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/anaconda3/lib/python3.7/site-packages/pymongo/helpers.py[0m in [0;36m_check_command_response[0;34m(response, max_wire_version, msg, allowable_errors, parse_write_concern_error)[0m
[1;32m    166[0m             [0mmsg[0m [0;34m=[0m [0mmsg[0m [0;32mor[0m [0;34m"%s"[0m[0;34m[0m[0;34m[0m[0m
[1;32m    167[0m             raise OperationFailure(msg % errmsg, code, response,
[0;32m--> 168[0;31m                                    max_wire_version)
[0m[1;32m    169[0m [0;34m[0m[0m
[1;32m    170[0m [0;34m[0m[0m

[0;31mOperationFailure[0m: bad auth : Authentication failed., full error: {'ok': 0, 'errmsg': 'bad auth : Authentication failed.', 'code': 8000, 'codeName': 'AtlasError'}
OperationFailure: bad auth : Authentication failed., full error: {'ok': 0, 'errmsg': 'bad auth : Authentication failed.', 'code': 8000, 'codeName': 'AtlasError'}

