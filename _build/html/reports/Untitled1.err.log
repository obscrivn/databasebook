Traceback (most recent call last):
  File "/Users/olgascrivner/Documents/IU-DataScience/Database/book/venv/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/olgascrivner/Documents/IU-DataScience/Database/book/venv/lib/python3.10/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/olgascrivner/Documents/IU-DataScience/Database/book/venv/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
  File "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/Users/olgascrivner/Documents/IU-DataScience/Database/book/venv/lib/python3.10/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/Users/olgascrivner/Documents/IU-DataScience/Database/book/venv/lib/python3.10/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/olgascrivner/Documents/IU-DataScience/Database/book/venv/lib/python3.10/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
#!/usr/bin/env python3

# step 1: import the redis-py client package
import redis

# step 2: define our connection information for Redis
# Replaces with your configuration information
redis_host = "localhost"
redis_port = 6379
redis_password = ""


def hello_redis():
    """Example Hello Redis Program"""
   
    # step 3: create the Redis Connection object
    try:
   
        # The decode_repsonses flag here directs the client to convert the responses from Redis into Python strings
        # using the default encoding utf-8.  This is client specific.
        r = redis.StrictRedis(host=redis_host, port=redis_port, password=redis_password, decode_responses=True)
   
        # step 4: Set the hello message in Redis
        r.set("msg:hello", "Hello Redis!!!")

        # step 5: Retrieve the hello message from Redis
        msg = r.get("msg:hello")
        print(msg)        
   
    except Exception as e:
        print(e)


if __name__ == '__main__':
    hello_redis()
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Cell [0;32mIn[1], line 4[0m
[1;32m      1[0m [38;5;66;03m#!/usr/bin/env python3[39;00m
[1;32m      2[0m 
[1;32m      3[0m [38;5;66;03m# step 1: import the redis-py client package[39;00m
[0;32m----> 4[0m [38;5;28;01mimport[39;00m [38;5;21;01mredis[39;00m
[1;32m      6[0m [38;5;66;03m# step 2: define our connection information for Redis[39;00m
[1;32m      7[0m [38;5;66;03m# Replaces with your configuration information[39;00m
[1;32m      8[0m redis_host [38;5;241m=[39m [38;5;124m"[39m[38;5;124mlocalhost[39m[38;5;124m"[39m

[0;31mModuleNotFoundError[0m: No module named 'redis'

